import{_ as t,W as l,X as _,$ as e}from"./framework-cb8f0348.js";const o={},s=e("p",null,"并行网关用于无条件的拆分或合并路径，该类网关忽略路径设置的条件。并行网关有路径和合并两种行为，允许多进多出。",-1),n=e("p",null,"该网关可以应用于一些并行场景，但由于会产生多个路径，在复杂的流程中如果设计者没有考虑正确可能会出现意想不到的流程走向，在支持允许驳回的功能情况下，整个流程可能会更加混乱，建议使用节点内的并/会签功能来代替部分功能；如果必须使用，也建议使用出向多条件后尽快采用配对的并行网关聚合条件，减少出错的可能性。",-1),c=e("p",null,"并行拆分 并行网关的每个后继路径路径都被无条件执行。当一条路径被执行时，一个令牌被创建。",-1),a=e("p",null,"并行合并 所有到达并行网关的路径都汇聚于此等待，直到每个输入流的路径都执行完毕，然后通过网关流向后续活动节点，除了系统中驳回和流程结束会自动取消所有等待及待办节点外,如果其中有路径未被执行或中断，那么该并行网关将处于永久等待状态，需要流程设计者注意避免该情况发生。",-1),r=[s,n,c,a];function d(i,p){return l(),_("div",null,r)}const h=t(o,[["render",d],["__file","parallel.html.vue"]]);export{h as default};
